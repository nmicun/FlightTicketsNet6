@page "/"


<div class="row">
    <div class="col-3">

        <h3>Passenger info:</h3>

        <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1">Your name:</span>
            <input width="300px" type="text" class="form-control" @bind="@Name" placeholder="" aria-label="Name" aria-describedby="basic-addon1">
        </div>
        <br />
        <h6>Select your birthday</h6>
        <div>
            <SfCalendar TValue="DateTime" @bind-Value="@BirthDate"></SfCalendar>
        </div>
        <br />

        <SfComboBox Width="300px" TValue="string" TItem="CGender" @bind-Value="@GenCode" Placeholder="Select gender" DataSource="@Genders">
            <ComboBoxFieldSettings Value="Code" Text="Type"></ComboBoxFieldSettings>
        </SfComboBox>

        <br />
        <br />

        <SfComboBox Width="300px" TValue="string" TItem="CDestination" @bind-Value="@DestCode" Placeholder="Select your destination" DataSource="@Destination">
            <ComboBoxFieldSettings Value="Code" Text="Type"></ComboBoxFieldSettings>
        </SfComboBox>
        <br />
        <br />
        <SfComboBox Width="300px" TValue="string" TItem="CMeal" @bind-Value="@MealCode" Placeholder="Select your meal" DataSource="@Meals">
            <ComboBoxFieldSettings Value="Code" Text="Type"></ComboBoxFieldSettings>
        </SfComboBox>
        <br />
        <br />
        <SfComboBox Width="300px" TValue="string" TItem="CClass" @bind-Value="@ClassCode" Placeholder="Select your class" DataSource="@CClasses">
            <ComboBoxFieldSettings Value="Code" Text="Type"></ComboBoxFieldSettings>
        </SfComboBox>
        <br />

        <h5 style="color:red; font-weight:bold">@ErrMsg</h5>
        <br />

        <button class="btn-primary" style="margin:20px; align-self:center" @onclick="@ispisi">Get a QR code</button>
       

    </div>
    @if (isVisible)
    {
        
        <div class="col-7">
            <h6>Print this!</h6>
            <div class="container-fluid" style="border:2px dotted red; margin:10px; padding:10px;">
                <div class="row">
                    <div class="col-4">
                        <h6>Name: <span style="font-weight:bold">@Name</span></h6>
                        <br />
                        <h6>Birhday: <span style="font-weight:bold">@BirthDate</span></h6>
                        <br />
                        @if (GenCode == "X" || GenCode == "x")
                        {
                            <h6>Gender: <span style="font-weight:bold">Male</span> </h6>
                        }
                        else if (GenCode == "Y" || GenCode == "y")
                        {
                            <h6>Gender: <span style="font-weight:bold">Female</span> </h6>
                        }
                    </div>

                    <div class="col-4">
                        <h6>Destination: <span style="font-weight:bold">@selDest</span></h6>
                        <br />
                        <h6>Meal: <span style="font-weight:bold">@selMeal</span></h6>
                        <br />
                        <h6>Class: <span style="font-weight:bold">@selClas</span></h6>
                        <br />
                    </div>
                    <div class="col-4">
                        <img src="@url" />
                    </div>
                </div>

            </div>

        </div>
    }
</div>











@code {

    //new code


    List<CGender> Genders = new List<CGender> {
        new CGender() { Type="Male", Code="X" },
        new CGender() { Type="Female", Code="Y" } };

    List<CDestination> Destination = new List<CDestination> {
        new CDestination() { Type="UK", Code="A" },
        new CDestination() { Type="Europe", Code="B" },
        new CDestination() { Type="Asia", Code="C" },
        new CDestination() { Type="America", Code="D" } };

    List<CMeal> Meals = new List<CMeal> {
       new CMeal() { Type="Europian", Code="G" },
        new CMeal() { Type="Asian", Code="H" },
        new CMeal() { Type="Vegetarian", Code="K" } };

    List<CClass> CClasses = new List<CClass> {
        new CClass() { Type="First Class", Code="P" },
        new CClass() { Type="Buisness", Code="Q" },
        new CClass() { Type="Economy", Code="R" } };




    public DateTime DateValue { get; set; } = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 10);
    public DateTime BirthDate { get; set; }
    public string? Name { get; set; }
    public Uri? url { get; set; }
    public string? ErrMsg { get; set; }
    public bool isVisible { get; set; } = false;
    public string? selMeal { get; set; }
    public string? selDest { get; set; }
    public string? selClas { get; set; }

    //
    public class CGender
    {
        public string? Type { get; set; }
        public string? Code { get; set; }

    }

    public class CDestination
    {
        public string? Type { get; set; }
        public string? Code { get; set; }

    }
    public class CMeal
    {
        public string? Type { get; set; }
        public string? Code { get; set; }

    }

    public class CClass
    {
        public string? Type { get; set; }
        public string? Code { get; set; }

    }


    //for code

    public string? DestCode { get; set; }
    public string? GenCode { get; set; }
    public string? MealCode { get; set; }
    public string? ClassCode { get; set; }

    public void ispisi()
    {
        ErrMsg = "";
        if (DestCode == null || GenCode == null || MealCode == null || ClassCode == null)
            ErrMsg = "Please fill in all fields!";
        else
        {
            try
            {
                var newcode = CreateCode();
                url = new Uri("https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=" + newcode);
                DestCode = "";
                GenCode = "";
                MealCode = "";
                ClassCode = "";
                isVisible = true;
            }
            catch (Exception) { }
        }
    }



    public bool isChild(DateTime birth)
    {
        DateTime zeroTime = new DateTime(1, 1, 1);

        DateTime a = DateTime.Now.Date;
        DateTime b = birth.Date;

        TimeSpan span = a - b;

        int years = (zeroTime + span).Year - 1;

        return years < 12;
    }

    public string CreateCode()
    {
        try
        {
            var selmeal = Meals.Where(x => x.Code == MealCode).First();
            var seldest = Destination.Where(x => x.Code == DestCode).First();
            var selclas = CClasses.Where(x => x.Code == ClassCode).First();
            selMeal = selmeal.Type;
            selDest = seldest.Type;
            selClas = selclas.Type;
        }
        catch (Exception) { }


        if (isChild(BirthDate) && GenCode != null && MealCode != null)
        {
            GenCode = GenCode.ToLower();
            MealCode = MealCode.ToLower();
            selMeal = selMeal + " - for kids!";
        }

        if (DateTime.Now.Hour > 23 && DateTime.Now.Hour < 6 && DestCode != null)
            DestCode = DestCode.ToLower();

        return DestCode + GenCode + MealCode + ClassCode;
    }




}